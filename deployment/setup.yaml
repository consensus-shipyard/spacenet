# Sets up the environment for running the Lotus daemon and validator.
# This includes installing the necessary packages, fetching the Lotus code, and compiling it.
# It does not start any nodes. See start-* and deploy-*.yaml for starting the nodes.
#
# Applies to all hosts by default, unless other nodes are specified using --extra-vars "nodes=..."

---
- name: Initialize Mir benchmark VM
  hosts: "{{nodes | default('all')}}"
  gather_facts: False
  become: False
  environment:
    PATH: "{{ ansible_env.PATH }}:/home/{{ ansible_user }}/go/bin"
  tasks:

    - name: "Run apt update"
      become: True
      ansible.builtin.apt:
        update_cache: True


    - name: "Install apt packages"
      become: True
      ansible.builtin.apt:
        name:
          - mesa-opencl-icd
          - ocl-icd-opencl-dev
          - gcc
          - git
          - bzr
          - jq
          - pkg-config
          - curl
          - clang
          - build-essential
          - hwloc
          - libhwloc-dev
          - wget
          - make
          - golang
          - tmux
        state: present


    - name: "Work around upgrade issues on some Linux machines"
      become: True
      ansible.builtin.apt:
        name:
          - grub-efi-amd64-signed
        only_upgrade: True


    - name: "Run apt upgrade"
      become: True
      ansible.builtin.apt:
        upgrade: True


    - name: "Clone Lotus repo from GitHub"
      ansible.builtin.git:
        repo: "{{ lotus_git_repo }}"
        dest: ~/lotus
        force: True


    - name: "Check out the selected code version: {{ lotus_git_version }}"
      ansible.builtin.git:
        repo: "{{ lotus_git_repo }}"
        dest: ~/lotus
        single_branch: True
        version: "{{ lotus_git_version }}"
        force: True


    - name: "Replace mir library by a custom version ({{ replace_mir }})"
      shell: echo '\nreplace github.com/filecoin-project/mir => {{ replace_mir }}\n' >> lotus/go.mod && cd lotus && go mod tidy
      when: replace_mir is defined


    - name: "Clone Spacenet repo from GitHub"
      ansible.builtin.git:
        repo: "{{ spacenet_git_repo }}"
        dest: ~/spacenet
        force: True


    - name: "Check out the selected code version: {{ spacenet_git_version }}"
      ansible.builtin.git:
        repo: "{{ spacenet_git_repo }}"
        dest: ~/spacenet
        single_branch: True
        version: "{{ spacenet_git_version }}"
        force: True


    - name: "Upload log rotation utility"
      ansible.builtin.copy:
        src: rotate-logs.sh
        dest: lotus/rotate-logs.sh
        mode: u+x


    - name: "Compile Spacenet code"
      make:
        chdir: ~/lotus
        target: spacenet


    - name: "Run setup script"
      ansible.builtin.script:
        cmd: scripts/setup.sh
...
